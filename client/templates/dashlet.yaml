{{- if .Values.yuuvis.client.dashlet.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.yuuvis.labels.app}}
    name: dashlet365
    yuuvislog: "true"
  name: dashlet365
spec:
  replicas: {{.Values.yuuvis.client.dashlet.instances}}
  selector:
    matchLabels:
      name: dashlet365
  template:
    metadata:
      labels:
        name: dashlet365
        release: {{ .Release.Name }}
    spec:
      automountServiceAccountToken: false
      {{- if or .Values.yuuvis.client.dashlet.nodeAffinity .Values.yuuvis.client.dashlet.podAffinity .Values.yuuvis.client.dashlet.podAntiAffinity }}
      affinity:
        {{- with .Values.yuuvis.client.dashlet.nodeAffinity }}
        nodeAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.client.dashlet.podAffinity }}
        podAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.yuuvis.client.dashlet.podAntiAffinity }}
        podAntiAffinity: {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      containers:
        - name: dashlet365
          image: {{.Values.yuuvis.image.dockerRegistry}}/{{.Values.yuuvis.client.dashlet.dockerImage}}
          imagePullPolicy: Always
          env:
            - name: JAVA_OPTS
              value: {{.Values.yuuvis.client.dashlet.java.maxHeap}}
            - name: SPRING_PROFILES_ACTIVE
              value: {{.Values.yuuvis.client.dashlet.profiles}}
            - name: SPRING_CLOUD_CONFIG_URI
              value: {{ .Values.yuuvis.client.dashlet.configservice.url }} 
          ports:
            - containerPort: 8099
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          {{- if .Values.yuuvis.client.dashlet.resources }}
          resources: {{- toYaml .Values.yuuvis.client.dashlet.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
          - mountPath: /tmp
            name: tmp
      imagePullSecrets:
      - name: yuuvisorg
      restartPolicy: Always
      {{- with .Values.yuuvis.client.dashlet.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.yuuvis.client.dashlet.priorityClassName }}
      priorityClassName: {{ .Values.yuuvis.client.dashlet.priorityClassName }}
      {{- end }}
      {{- with .Values.yuuvis.client.dashlet.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: {{.Values.yuuvis.securityContext.fsGroup}}
        runAsGroup: {{.Values.yuuvis.securityContext.runAsGroup}}
        runAsUser: {{.Values.yuuvis.securityContext.runAsUser}}
        runAsNonRoot: {{.Values.yuuvis.securityContext.runAsNonRoot}}
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: tmp
{{- end }}